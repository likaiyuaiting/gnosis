静态内部类/非静态内部类区别

内部类会被编译器生成同外部类一样的顶级类。只不过非静态内部类会持有外部类的引用。这也是Android性能优化建议Handler使用静态内部类，防止外部类Activity不能被回收导致造成OOM。


内部类和外部类互相访问

内部类和外部类互相访问private方法和字段时，会自动在对应类为对方生成public的access&**方法。


热部署解决方案

外部类如果有内部类把所有的field/method的private访问权限改成proteced或者public内部类将所有的field/method的private访问权限改成proteced或者public。


    匿名内部类编译

匿名内部类命名规则

外部类&number。number即编译器根据匿名内部类出现在外部类中的顺序，依次累加。
热部署解决方案

新增/减少匿名内部类对热部署是无解的，因为补丁修复工具拿到的是class文件，无法区别DexFileDemo&1和DexFileDemo&2，会导致类的顺序乱套。如果匿名内部类插入到末尾则是允许。
